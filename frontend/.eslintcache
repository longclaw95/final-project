[{"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\App.js":"2","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Header.js":"3","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\index.js":"5","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Product.js":"7","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\store\\store.js":"10","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\productReducers.js":"11","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\productConstants.js":"12","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\productActions.js":"13","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\CartScreen.js":"14","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\cartReducers.js":"15","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\cartConstants.js":"16","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\cartActions.js":"17","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\userReducers.js":"18","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\FormContainer.js":"19","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\LoginScreen.js":"20","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\userActions.js":"21","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\userConstants.js":"22","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\RegisterScreen.js":"23","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProfileScreen.js":"24","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ShippingScreen.js":"25","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\CheckoutSteps.js":"26","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\PaymentScreen.js":"27","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\PlaceOrderScreen.js":"28","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\orderConstants.js":"29","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\orderActions.js":"30","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\orderReducers.js":"31","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\OrderScreen.js":"32","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\UserListScreen.js":"33","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Loader.js":"34","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProductListScreen.js":"36","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProductEditScreen.js":"37","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Message.js":"38","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\OrderListScreen.js":"39","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\SearchBox.js":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"42"},{"size":2217,"mtime":1607447095020,"results":"43","hashOfConfig":"42"},{"size":2899,"mtime":1607447348265,"results":"44","hashOfConfig":"42"},{"size":492,"mtime":1606129321783,"results":"45","hashOfConfig":"42"},{"size":655,"mtime":1606649783368,"results":"46","hashOfConfig":"42"},{"size":1167,"mtime":1607448473419,"results":"47","hashOfConfig":"42"},{"size":1086,"mtime":1606142440766,"results":"48","hashOfConfig":"42"},{"size":8668,"mtime":1607436371767,"results":"49","hashOfConfig":"42"},{"size":1570,"mtime":1606140479788,"results":"50","hashOfConfig":"42"},{"size":2710,"mtime":1607433588929,"results":"51","hashOfConfig":"42"},{"size":3537,"mtime":1607433526516,"results":"52","hashOfConfig":"42"},{"size":1348,"mtime":1607433453487,"results":"53","hashOfConfig":"42"},{"size":4492,"mtime":1607448404429,"results":"54","hashOfConfig":"42"},{"size":3869,"mtime":1606932242873,"results":"55","hashOfConfig":"42"},{"size":1623,"mtime":1607251065797,"results":"56","hashOfConfig":"42"},{"size":288,"mtime":1607251002931,"results":"57","hashOfConfig":"42"},{"size":1377,"mtime":1606834157417,"results":"58","hashOfConfig":"42"},{"size":3998,"mtime":1607028285718,"results":"59","hashOfConfig":"42"},{"size":391,"mtime":1606647795435,"results":"60","hashOfConfig":"42"},{"size":2264,"mtime":1606651231950,"results":"61","hashOfConfig":"42"},{"size":6414,"mtime":1607251167188,"results":"62","hashOfConfig":"42"},{"size":1511,"mtime":1607027985980,"results":"63","hashOfConfig":"42"},{"size":3292,"mtime":1606734083854,"results":"64","hashOfConfig":"42"},{"size":7025,"mtime":1607366810266,"results":"65","hashOfConfig":"42"},{"size":3030,"mtime":1606834724053,"results":"66","hashOfConfig":"42"},{"size":1292,"mtime":1606767878554,"results":"67","hashOfConfig":"42"},{"size":1831,"mtime":1606834868959,"results":"68","hashOfConfig":"42"},{"size":5277,"mtime":1606913756464,"results":"69","hashOfConfig":"42"},{"size":1208,"mtime":1607365993068,"results":"70","hashOfConfig":"42"},{"size":5001,"mtime":1607366566531,"results":"71","hashOfConfig":"42"},{"size":3350,"mtime":1607366193997,"results":"72","hashOfConfig":"42"},{"size":7233,"mtime":1607378124553,"results":"73","hashOfConfig":"42"},{"size":2893,"mtime":1607253053204,"results":"74","hashOfConfig":"42"},{"size":443,"mtime":1606399028076,"results":"75","hashOfConfig":"42"},{"size":3365,"mtime":1607034138050,"results":"76","hashOfConfig":"42"},{"size":4075,"mtime":1607261804557,"results":"77","hashOfConfig":"42"},{"size":6440,"mtime":1607342282883,"results":"78","hashOfConfig":"42"},{"size":294,"mtime":1606399132456,"results":"79","hashOfConfig":"42"},{"size":2736,"mtime":1607357508366,"results":"80","hashOfConfig":"42"},{"size":782,"mtime":1607447013631,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1xpfw6t",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\reportWebVitals.js",[],["177","178"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\App.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Footer.js",[],["179","180"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\index.js",[],["181","182"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\HomeScreen.js",[],["183","184"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Product.js",[],["185","186"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProductScreen.js",["187"],"import React,{useEffect,useState} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row,Col,Image,ListGroup, Card, Button, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails,createProductReview} from '../JS/actions/productActions'\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../JS/constants/productConstants'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\n\r\nconst ProductScreen = ({history,match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment,setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error , product} = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {loading : loadingProductReview, error : errorProductReview , success : successProductReview} = productReviewCreate\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n          setRating(0)\r\n          setComment('')\r\n        }\r\n        if (!product._id || product._id !== match.params.id) {\r\n          dispatch(listProductDetails(match.params.id))\r\n          dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n      }, [dispatch, match, successProductReview,userInfo])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n          createProductReview(match.params.id, {\r\n            rating,\r\n            comment,\r\n          })\r\n        )\r\n      }\r\n\r\n    \r\n      return (\r\n        <>\r\n          <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n          </Link>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <>\r\n              \r\n              <Row>\r\n                <Col md={6}>\r\n                  <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                      />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      Description: {product.description}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Card>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Price:</Col>\r\n                          <Col>\r\n                            <strong>${product.price}</strong>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n    \r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Status:</Col>\r\n                          <Col>\r\n                            {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n    \r\n                      {product.countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col>Qty</Col>\r\n                            <Col>\r\n                              <Form.Control\r\n                                as='select'\r\n                                value={qty}\r\n                                onChange={(e) => setQty(e.target.value)}\r\n                              >\r\n                                {[...Array(product.countInStock).keys()].map(\r\n                                  (x) => (\r\n                                    <option key={x + 1} value={x + 1}>\r\n                                      {x + 1}\r\n                                    </option>\r\n                                  )\r\n                                )}\r\n                              </Form.Control>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      )}\r\n    \r\n                      <ListGroup.Item>\r\n                        <Button\r\n                          onClick={addToCartHandler}\r\n                          className='btn-block'\r\n                          type='button'\r\n                          disabled={product.countInStock === 0}\r\n                        >\r\n                          Add To Cart\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h2>Reviews</h2>\r\n                  {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                  <ListGroup variant='flush'>\r\n                    {product.reviews.map((review) => (\r\n                      <ListGroup.Item key={review._id}>\r\n                        <strong>{review.name}</strong>\r\n                        <Rating value={review.rating} />\r\n                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                        <p>{review.comment}</p>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                    <ListGroup.Item>\r\n                      <h2>Write a Customer Review</h2>\r\n                      {successProductReview && (\r\n                        <Message variant='success'>\r\n                          Review submitted successfully\r\n                        </Message>\r\n                      )}\r\n                      {loadingProductReview && <Loader />}\r\n                      {errorProductReview && (\r\n                        <Message variant='danger'>{errorProductReview}</Message>\r\n                      )}\r\n                      {userInfo ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                          <Form.Group controlId='rating'>\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <Form.Control\r\n                              as='select'\r\n                              value={rating}\r\n                              onChange={(e) => setRating(e.target.value)}\r\n                            >\r\n                              <option value=''>Select...</option>\r\n                              <option value='1'>1 - Poor</option>\r\n                              <option value='2'>2 - Fair</option>\r\n                              <option value='3'>3 - Good</option>\r\n                              <option value='4'>4 - Very Good</option>\r\n                              <option value='5'>5 - Excellent</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='comment'>\r\n                            <Form.Label>Comment</Form.Label>\r\n                            <Form.Control\r\n                              as='textarea'\r\n                              row='3'\r\n                              value={comment}\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                          <Button\r\n                            disabled={loadingProductReview}\r\n                            type='submit'\r\n                            variant='primary'\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </Form>\r\n                      ) : (\r\n                        <Message>\r\n                          Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                        </Message>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </>\r\n      )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Rating.js",[],["188","189"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\store\\store.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\productReducers.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\productConstants.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\productActions.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\CartScreen.js",["190"],"import React,{useEffect} from 'react'\r\nimport {Row,Col,ListGroup,Image,Form, Button,Card} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {addToCart,removeFromCart} from '../JS/actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\nconst CartScreen = ({match, history , location}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addToCart(productId,qty))\r\n    }, [dispatch, productId, qty])\r\n\r\n    \r\n\r\n    \r\n\r\n    const removeFromCartHandler=(id)=> {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler=()=> {\r\n        history.push(`/login?redirect=shipping`)\r\n    }\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n      \r\n\r\n    return (\r\n        <>\r\n        \r\n        <h1>My Cart </h1>\r\n        <Row>\r\n            \r\n            <Col md={9}>\r\n                \r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key = {item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    ${item.price}\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                <Form.Control as='select' value={item.qty}\r\n                                onChange={(e)=> {dispatch(addToCart(item.product,Number(e.target.value)))}}>\r\n                                {\r\n\r\n                                [...Array(item.countInStock).keys()].map(x=>(\r\n                                    <option key={x+1} value={x+1}>{x+1}</option>\r\n                                ))\r\n                                \r\n                                }\r\n                            </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button variant='light' type ='button'\r\n                                    onClick={()=> removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n                    \r\n            </Col>\r\n            <Col md ={3}>\r\n                <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>subtotal ({cartItems.reduce((acc,item)=> acc + item.qty, 0)}) of Items</h2>\r\n                        $ ({cartItems.reduce((acc,item)=> acc + item.price *item.qty, 0).toFixed(3)})\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button className='btn-block' type ='button'\r\n                            disabled = {cartItems.length ===0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed to shipping\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                </Card>\r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CartScreen\r\n",["191","192"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\cartReducers.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\cartConstants.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\cartActions.js",[],["193","194"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\userReducers.js",[],["195","196"],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\userActions.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\userConstants.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProfileScreen.js",["197"],"import React, {useState,useEffect} from 'react'\r\nimport {Row, Col , Form , Button,Table} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails,updateUserProfile} from '../JS/actions/userActions'\r\nimport {listMyOrders} from '../JS/actions/orderActions'\r\n\r\nconst ProfileScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {user,loading,error} = userDetails\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {orders,loading : loadingOrders,error : errorOrders} = orderListMy\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    useEffect(()=>{\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                \r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                dispatch(listMyOrders())\r\n                \r\n            }\r\n        }\r\n        \r\n    },[history,dispatch,userInfo,user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !==confirmPassword){\r\n            setMessage('passwords do not match')\r\n        } else {\r\n            \r\n            dispatch(updateUserProfile({id : user._id, name , email , password}))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={4}>\r\n            <h2>User Profile</h2>\r\n      \r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {success && <Message variant='success'>Profile updated</Message>}\r\n      {loading ? (<Loader />) : (\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n  \r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n  \r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n  \r\n          <Form.Group controlId='ConfirmPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n  \r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      )}\r\n      \r\n            </Col>\r\n            <Col md ={8}>\r\n                <h2>my orders</h2>\r\n                {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>DETAILS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order)=>(\r\n                <tr key = {order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt.substring(0,10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? \r\n                  (order.paidAt.substring(0,10)) : \r\n                  ( <i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n              </td>\r\n              <td>\r\n                  {order.isDelivered ? \r\n                  (order.deliveredAt.substring(0,10)) : \r\n                  ( <i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n              </td>\r\n              <td>\r\n                <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n              </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n{/* <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody> */}\r\n\r\nexport default ProfileScreen\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\PlaceOrderScreen.js",["198"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../JS/actions/orderActions'\r\n// import { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n// import { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  const cart = useSelector(state=>state.cart)\r\n  \r\n  const orderCreate = useSelector(state=>state.orderCreate)\r\n\r\n  const {order, error, success} = orderCreate\r\n  \r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  useEffect(()=>{\r\n    if(success){\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n    \r\n  },[history,success])\r\n\r\n  const placeOrderHandler=()=>{\r\n    dispatch(createOrder({\r\n      orderItems : cart.cartItems,\r\n      shippingAddress : cart.shippingAddress,\r\n      paymentMethod : cart.paymentMethod,\r\n      itemsPrice : cart.itemsPrice,\r\n      taxPrice : cart.taxPrice,\r\n      shippingPrice : cart.shippingPrice,\r\n      totalPrice : cart.totalPrice,\r\n    }))\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.adress}{' '}\r\n                {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.country}{' '}\r\n                {cart.shippingAddress.postalCode}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\constants\\orderConstants.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\actions\\orderActions.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\JS\\reducers\\orderReducers.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\OrderScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\UserListScreen.js",["199","200"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {listUsers, deleteUser} from '../JS/actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { Table,Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst UserListScreen = ({history}) => {\r\n    const userList = useSelector(state => state.userList)\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const userDelete = useSelector(state=>state.userDelete)\r\n    const {loading : loadingDelete , error : errorDelete, success : successDelete} = userDelete\r\n    const {userInfo} = userLogin\r\n    const {users , loading , error} = userList\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n        \r\n       \r\n    }, [dispatch,history,successDelete,userInfo])\r\n\r\n    const deleteHandler =(id)=> {\r\n        if (window.confirm('are you sure you want to delete this user ? ')) {\r\n\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <h1>Users</h1>\r\n            {loading ? <Loader /> : error ?  <Message variant = 'danger'>{error}</Message> : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>email</th>\r\n                    <th>Name</th>\r\n                     <th>Admin</th>\r\n                     <th>Edit</th>\r\n                     <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {users.map((user)=>(\r\n            <tr key= {user._id}>\r\n                <td>{user._id}</td>\r\n                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                    <td>{user.name}</td>\r\n                <td>{user.isAdmin ? (<i className='fas fa-check' style={{color : 'green'}}></i>) : (\r\n                    <i className='fas fa-times' style={{color : 'red'}}></i>\r\n                ) }</td>\r\n                <td>\r\n                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  </td>\r\n                  <td>\r\n                  <Button className='btn-sm' onClick={()=>{deleteHandler(user._id)}}>\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n\r\n                  </td>\r\n                \r\n            </tr>\r\n))\r\n\r\n}\r\n            </tbody>\r\n        </Table>\r\n        \r\n            \r\n        \r\n            )}\r\n</>\r\n    )}\r\n\r\n\r\n\r\nexport default UserListScreen\r\n","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\UserEditScreen.js",["201","202"],"import React, {useState,useEffect} from 'react'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col , Form , Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails, updateUser} from '../JS/actions/userActions'\r\nimport {USER_UPDATE_RESET} from '../JS/constants/userConstants'\r\n\r\nconst UserEditScreen = ({match,history}) => {\r\n    const userId = match.params.id\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    \r\n\r\n    \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {user,loading,error} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {success : successUpdate,loading : loadingUpdate,error : errorUpdate} = userUpdate\r\n\r\n    useEffect(()=>{\r\n         if (successUpdate) {\r\n             dispatch({type : USER_UPDATE_RESET })\r\n            history.push('/admin/userList')\r\n         } else {\r\n            if(!user.name || user._id !== userId) {\r\n            \r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n         }\r\n        \r\n    },[dispatch,user,history,userId,successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id : userId , name , email, isAdmin}))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Link to='/admin/userList' className='btn btn-light my-3'>Go back</Link>\r\n        <FormContainer>\r\n      <h1>Edit User</h1>\r\n      {loadingUpdate && <Loader />}\r\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n      {loading ? <Loader></Loader> : error ? <Message variant='danger'>{error}</Message> : (\r\n          <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n    \r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n    \r\n            <Form.Group controlId='isAdmin'>\r\n              \r\n              <Form.Check\r\n                type='checkbox'\r\n                label = 'is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n    \r\n            \r\n    \r\n            <Button type='submit' variant='primary'>\r\n              update\r\n            </Button>\r\n          </Form>\r\n      )}\r\n      \r\n\r\n    </FormContainer>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Zeddini\\Desktop\\gomycode\\final-project\\frontend\\src\\components\\SearchBox.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"203","replacedBy":"207"},{"ruleId":"205","replacedBy":"208"},{"ruleId":"203","replacedBy":"209"},{"ruleId":"205","replacedBy":"210"},{"ruleId":"203","replacedBy":"211"},{"ruleId":"205","replacedBy":"212"},{"ruleId":"203","replacedBy":"213"},{"ruleId":"205","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":39,"column":10,"nodeType":"217","endLine":39,"endColumn":58,"suggestions":"218"},{"ruleId":"203","replacedBy":"219"},{"ruleId":"205","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":15},{"ruleId":"203","replacedBy":"225"},{"ruleId":"205","replacedBy":"226"},{"ruleId":"203","replacedBy":"227"},{"ruleId":"205","replacedBy":"228"},{"ruleId":"203","replacedBy":"229"},{"ruleId":"205","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":167,"column":1,"nodeType":"233","messageId":"234","endLine":206,"endColumn":25},{"ruleId":"215","severity":1,"message":"235","line":41,"column":5,"nodeType":"217","endLine":41,"endColumn":22,"suggestions":"236"},{"ruleId":"221","severity":1,"message":"237","line":14,"column":22,"nodeType":"223","messageId":"224","endLine":14,"endColumn":35},{"ruleId":"221","severity":1,"message":"238","line":14,"column":46,"nodeType":"223","messageId":"224","endLine":14,"endColumn":57},{"ruleId":"221","severity":1,"message":"239","line":4,"column":9,"nodeType":"223","messageId":"224","endLine":4,"endColumn":12},{"ruleId":"221","severity":1,"message":"240","line":4,"column":14,"nodeType":"223","messageId":"224","endLine":4,"endColumn":17},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],["241"],["242"],["241"],["242"],["241"],["242"],["241"],["242"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["243"],["241"],["242"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar",["241"],["242"],["241"],["242"],["241"],["242"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["244"],"'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview, userInfo]",{"range":"249","text":"250"},"Update the dependencies array to be: [history, order._id, success]",{"range":"251","text":"252"},[1497,1545],"[dispatch, match, product._id, successProductReview, userInfo]",[1377,1394],"[history, order._id, success]"]